<node>
    <category name="SPM">
        <category name="Spatial">
            <category name="Smooth"/>
        </category>
    </category>
    <title name="Smooth">
        <code>
            <language name="SPM">
                <comment text="Smooth"/>
                <argument name=""/>
            </language>
        </code>
    </title>
    <input-output name="Functional Data">
        <code>
            <language name="SPM">
                <argument name="inputData = {%1}';
inputData = [inputData{:}]';
matlabbatch{batchNumber}.spm.spatial.smooth.data	= inputData;
matlabbatch{batchNumber}.spm.spatial.smooth.fwhm	= [4, 4, 4];
matlabbatch{batchNumber}.spm.spatial.smooth.dtype	= 0;
matlabbatch{batchNumber}.spm.spatial.smooth.im		= 0;
matlabbatch{batchNumber}.spm.spatial.smooth.prefix	= 's';"/>
            </language>
        </code>
    </input-output>
    <input name="FWHM" default="[4, 4, 4]">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.smooth.fwhm\t\t\t= %1;"/>
            </language>
        </code>
    </input>
    <hidden name="Data type" default="0">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.smooth.dtype\t\t= %1;"/>
            </language>
        </code>
    </hidden>
    <hidden name="im" default="0">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.smooth.im\t\t= %1;"/>
            </language>
        </code>
    </hidden>
    <secret name="Prefix" default="'s'">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.smooth.prefix\t= %1;"/>
            </language>
        </code>
    </secret>
    <output name="Smoothed Data">
        <code>
            <language name="SPM">
                <argument name="outputData = {%1};
for session = 1:length(outputData)
    batchNumber = batchNumber + 1;
    [root, outputFile] = fileparts(outputData{session}{1});
    [path, fileName, extension] = fileparts(matlabbatch{mainBatch}.spm.spatial.smooth.data{session});
    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.files = {[path, filesep(), matlabbatch{mainBatch}.spm.spatial.smooth.prefix, fileName, extension]};
    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.moveto = {root};
    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.patrep.pattern = ['s', fileName];
    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.patrep.repl = outputFile;
    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.unique = false;
end"/>
            </language>
        </code>
    </output>
</node>

<node>
    <category name="SPM">
        <category name="Spatial">
            <category name="Realign"/>
        </category>
    </category>
    <title name="Realignment - estimate &amp; reslice">
        <code>
            <language name="SPM">
                <comment text="Realignment"/>
                <argument name=""/>
            </language>
        </code>
    </title>
    <input-output name="Functional Data">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.realign.estwrite.data\t\t\t\t= {%1};"/>
            </language>
        </code>
    </input-output>
    <hidden name="Quality" default="0.9">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.realign.estwrite.eoptions.quality\t= %1;"/>
            </language>
        </code>
    </hidden>
    <hidden name="Separation" default="4">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.realign.estwrite.eoptions.sep\t\t= %1;"/>
            </language>
        </code>
    </hidden>
    <hidden name="FWHM" default="5">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.realign.estwrite.eoptions.fwhm\t\t= %1;"/>
            </language>
        </code>
    </hidden>
    <hidden name="Register to Mean" default="true">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.realign.estwrite.eoptions.rtm\t\t= %1;"/>
            </language>
        </code>
    </hidden>
    <hidden name="Interpolation" default="2">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.realign.estwrite.eoptions.interp\t= %1;"/>
            </language>
        </code>
    </hidden>
    <hidden name="Wrap" default="[0, 0, 0]">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.realign.estwrite.eoptions.wrap\t\t= %1;"/>
            </language>
        </code>
    </hidden>
    <hidden name="Weight" default="''">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.realign.estwrite.eoptions.weight\t= %1;"/>
            </language>
        </code>
    </hidden>
    <hidden name="Which" default="[2, 1]">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.realign.estwrite.roptions.which\t= %1;"/>
            </language>
        </code>
    </hidden>
    <hidden name="Interpolation" default="4">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.realign.estwrite.roptions.interp\t= %1;"/>
            </language>
        </code>
    </hidden>
    <hidden name="Wrap" default="[0, 0, 0]">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.realign.estwrite.roptions.wrap\t\t= %1;"/>
            </language>
        </code>
    </hidden>
    <hidden name="Mask" default="1">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.realign.estwrite.roptions.mask\t\t= %1;"/>
            </language>
        </code>
    </hidden>
    <secret name="Prefix" default="'r'">
        <code>
            <language name="SPM">
                <argument name="matlabbatch{batchNumber}.spm.spatial.realign.estwrite.roptions.prefix\t= %1;"/>
            </language>
        </code>
    </secret>
    <output name="Resliced Data">
        <code>
            <language name="SPM">
                <argument name="outputData = {%1};
for session = 1:length(matlabbatch{mainBatch}.spm.spatial.realign.estwrite.data)
    batchNumber = batchNumber + 1;
    [root, outputFile] = fileparts(outputData{session}{1});
    [~, file, ~] = fileparts(matlabbatch{mainBatch}.spm.spatial.realign.estwrite.data{session}{1});
    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.files(1) = cfg_dep(sprintf('Realign: Estimate &amp; Reslice: Realignment Param File (Sess %d)', session), substruct('.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','sess', '()',{session}, '.','rpfile'));

    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.moveto = {root};
    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.patrep.pattern = ['rp_', file];
    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.patrep.repl = outputFile;
    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.unique = false;
end"
                />
            </language>
        </code>
    </output>
    <output name="Realignment Parameters ">
        <code>
            <language name="SPM">
                <argument name="outputData = {%1};
for session = 1:length(matlabbatch{mainBatch}.spm.spatial.realign.estwrite.data)
batchNumber = batchNumber + 1;
    [root, outputFile] = fileparts(outputData{session}{1});
    [~, file, ~] = fileparts(matlabbatch{mainBatch}.spm.spatial.realign.estwrite.data{session}{1});
    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.files(1) = cfg_dep(sprintf('Realign: Estimate &amp; Reslice: Resliced Images (Sess %d)', session), substruct('.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','sess', '()',{session}, '.','rfiles'));

    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.moveto = {root};
    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.patrep.pattern = ['r', file];
    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.patrep.repl = outputFile;
    matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.unique = false;
end"
                />
            </language>
        </code>
    </output>
    <output name="Mean">
        <code>
            <language name="SPM">
                <argument name="batchNumber = batchNumber + 1;
[root, outputFile] = fileparts(%1);\nmatlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.files(1) = cfg_dep('Realign: Reslice: Mean Image', substruct('.','val', '{}',{batchNumber - 2}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','rmean'));
matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.moveto = {root};
[~, file, ~] = fileparts(matlabbatch{batchNumber - 2}.spm.spatial.realign.estwrite.data{1});
matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.patrep.pattern = ['mean', file];
matlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.patrep.repl = outputFile;\nmatlabbatch{batchNumber}.cfg_basicio.file_dir.file_ops.file_move.action.moveren.unique = false;"/>
            </language>
        </code>
    </output>
</node>
